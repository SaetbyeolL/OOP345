//**********************************************************************
//Workshop : #2 (P2)
//Full Name : Saetbyeol Lim
//Student ID# : 149814212
//Email : slim62@myseneca.ca
//Date : 24/9/2022 
//Comment :
//I have done all the coding by myself and only copied the code 
//that my professor provided to complete my workshops and assignments.
//**********************************************************************
 that the copy semantic will copy the elements of the resource, 
that the move semantic will move the elements of the resource. 
moving inside the same disc will be quicker than copying as just the file path is changed 
and the real data is still stored on the disc. Because it is merely performing a COPY operation, 
copying data from one disc to another will be comparatively quicker than cutting.

Read 'tennis-data.csv' using ifstream. When reading the first time, the number of matches in the file 
should be counted, so the first line is excluded using getline, and the lineCount is counted 
while looping. When the file reaches at the end, we dynamically allocates 
as much as the number stored in lineCount. After that, you have to go back to the beginning 
of the file again because we need to include all the matches contents in the file. 
At that time, is.clear() and is.seekg(0) are used. seekg() allows you to find the location of a file, 
and seekg(0) means to read from 0th. Skip the first line, run the while statement, 
and put the contents of all matches into an array using getline.

		ifstream is(filename);
		string temp;
		size_t lineCount = 0;
		getline(is, temp);
		while (is) {
			getline(is, temp);
			if (is) lineCount++;
		}
		m_count = lineCount;
		m_collection = new TennisMatch[m_count];
		is.clear();
		is.seekg(0);
		getline(is, temp);

		for(size_t i=0;i<m_count;i++){...}